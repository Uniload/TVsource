/*===========================================================================
	  C++ class	definitions	exported from UnrealScript.
	  This is automatically	generated by the tools.
	  DO NOT modify	this manually! Edit	the	corresponding .uc files	instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef TRIBESGUI_API
#define TRIBESGUI_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern TRIBESGUI_API	FName TRIBESGUI_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(DoLayout)
AUTOGENERATE_NAME(ForceNeedsLayout)
AUTOGENERATE_NAME(OnURLFailed)
AUTOGENERATE_NAME(RenderElement)
AUTOGENERATE_NAME(ResetFont)
AUTOGENERATE_NAME(SetAlpha)
AUTOGENERATE_NAME(SetNeedsLayout)
AUTOGENERATE_NAME(ShouldRender)
AUTOGENERATE_NAME(UpdateData)
AUTOGENERATE_NAME(newActiveProfile)

#ifndef NAMES_ONLY





// "event"	function whose parameters correspond to	"struct UTribesPatchCheck_eventOnURLFailed_Parms"	is declared	in "..\TribesGui\Classes\TribesPatchCheck.uc"
struct UTribesPatchCheck_eventOnURLFailed_Parms
{
	  FString Error;
};






// Enum EVerticalFill is declared in "..\TribesGui\Classes\HUD\HUDElement.uc"
enum EVerticalFill
{
	 VFILL_None              =0,
	 VFILL_Relative          =1,
	 VFILL_Up                =2,
	 VFILL_Down              =3,
	 VFILL_Both              =4,
	 VFILL_MAX               =5,
};
// Enum EVerticalAlignment is declared in "..\TribesGui\Classes\HUD\HUDElement.uc"
enum EVerticalAlignment
{
	 VALIGN_None             =0,
	 VALIGN_Relative         =1,
	 VALIGN_Top              =2,
	 VALIGN_Middle           =3,
	 VALIGN_Bottom           =4,
	 VALIGN_Previous         =5,
	 VALIGN_Next             =6,
	 VALIGN_MAX              =7,
};
// Enum EHorizontalFill is declared in "..\TribesGui\Classes\HUD\HUDElement.uc"
enum EHorizontalFill
{
	 HFILL_None              =0,
	 HFILL_Relative          =1,
	 HFILL_Left              =2,
	 HFILL_Right             =3,
	 HFILL_Both              =4,
	 HFILL_MAX               =5,
};
// Enum EHorizontalAlignment is declared in "..\TribesGui\Classes\HUD\HUDElement.uc"
enum EHorizontalAlignment
{
	 HALIGN_None             =0,
	 HALIGN_Relative         =1,
	 HALIGN_Left             =2,
	 HALIGN_Center           =3,
	 HALIGN_Right            =4,
	 HALIGN_Previous         =5,
	 HALIGN_Next             =6,
	 HALIGN_MAX              =7,
};
// Enum ELayoutDirection is declared in "..\TribesGui\Classes\HUD\HUDElement.uc"
enum ELayoutDirection
{
	 LD_ManualLayout         =0,
	 LD_Horizontal           =1,
	 LD_Vertical             =2,
	 LD_MAX                  =3,
};
// Struct FHUDMaterial	is declared	in "..\TribesGui\Classes\HUD\HUDElement.uc"
struct TRIBESGUI_API FHUDMaterial
{
    class UMaterial* Material;
    FColor DrawColor;
    FMatCoords Coords;
    BYTE Style;
    BITFIELD bStretched:1;
    BITFIELD bNoRender:1;
    BITFIELD bProgressControlled:1;
    BITFIELD bFlashing:1;
    FLOAT flashFrequency;
    FLOAT lastFlashTime;
    BITFIELD bFading:1;
    BITFIELD bFadePulse:1;
    FColor fadeSourceColor;
    FColor fadeTargetColor;
    FLOAT fadeDuration;
    FLOAT fadeStartTime;
    FLOAT fadeProgress;
};


// "event"	function whose parameters correspond to	"struct UHUDElement_eventSetAlpha_Parms"	is declared	in "..\TribesGui\Classes\HUD\HUDElement.uc"
struct UHUDElement_eventSetAlpha_Parms
{
	  FLOAT newAlpha;
};
// "event"	function whose parameters correspond to	"struct UHUDElement_eventRenderElement_Parms"	is declared	in "..\TribesGui\Classes\HUD\HUDElement.uc"
struct UHUDElement_eventRenderElement_Parms
{
	  class UCanvas* C;
};
// "event"	function whose parameters correspond to	"struct UHUDElement_eventUpdateData_Parms"	is declared	in "..\TribesGui\Classes\HUD\HUDElement.uc"
struct UHUDElement_eventUpdateData_Parms
{
	  class UClientSideCharacter* C;
};
// "event"	function whose parameters correspond to	"struct UHUDElement_eventResetFont_Parms"	is declared	in "..\TribesGui\Classes\HUD\HUDElement.uc"
struct UHUDElement_eventResetFont_Parms
{
};
// "event"	function whose parameters correspond to	"struct UHUDElement_eventForceNeedsLayout_Parms"	is declared	in "..\TribesGui\Classes\HUD\HUDElement.uc"
struct UHUDElement_eventForceNeedsLayout_Parms
{
};
// "event"	function whose parameters correspond to	"struct UHUDElement_eventSetNeedsLayout_Parms"	is declared	in "..\TribesGui\Classes\HUD\HUDElement.uc"
struct UHUDElement_eventSetNeedsLayout_Parms
{
};
// "event"	function whose parameters correspond to	"struct UHUDElement_eventDoLayout_Parms"	is declared	in "..\TribesGui\Classes\HUD\HUDElement.uc"
struct UHUDElement_eventDoLayout_Parms
{
	  class UCanvas* C;
};



// "event"	function whose parameters correspond to	"struct UHUDRadarBase_eventShouldRender_Parms"	is declared	in "..\TribesGui\Classes\HUD\HUDRadarBase.uc"
struct UHUDRadarBase_eventShouldRender_Parms
{
	  class UClass* radarInfoClass;
	  BITFIELD ReturnValue;
};

// Struct FHUDExtension	is declared	in "..\TribesGui\Classes\HUD\TribesHUDScriptBase.uc"
struct TRIBESGUI_API FHUDExtension
{
    FStringNoInit elementName;
    FStringNoInit ClassName;
    FStringNoInit IniFile;
};




// Enum ETextAlignment is declared in "..\TribesGui\Classes\HUD\LabelElement.uc"
enum ETextAlignment
{
	 ALIGN_Left              =0,
	 ALIGN_Center            =1,
	 ALIGN_Right             =2,
	 ALIGN_MAX               =3,
};


// Struct FLoadoutSlot	is declared	in "..\TribesGui\Classes\Config\PlayerProfile.uc"
struct TRIBESGUI_API FLoadoutSlot
{
    FStringNoInit loadoutName;
    FStringNoInit combatRoleClassName;
    FStringNoInit packClassName;
    FStringNoInit grenadeClassName;
    TArrayNoInit<FString> weaponClassNameList;
    BITFIELD occupied:1;
    TArrayNoInit<FSkinPreferenceMapping> skinPreferences;
};

// Struct FAutoLoginInfo	is declared	in "..\TribesGui\Classes\Config\PlayerProfile.uc"
struct TRIBESGUI_API FAutoLoginInfo
{
    FStringNoInit IP;
    FStringNoInit Port;
    FStringNoInit Username;
    FStringNoInit Password;
    BITFIELD bAutologin:1;
};

// Struct FServerFavorite	is declared	in "..\TribesGui\Classes\Config\PlayerProfile.uc"
struct TRIBESGUI_API FServerFavorite
{
    FStringNoInit IP;
    FStringNoInit Port;
};



// "event"	function whose parameters correspond to	"struct UProfileManager_eventnewActiveProfile_Parms"	is declared	in "..\TribesGui\Classes\Config\ProfileManager.uc"
struct UProfileManager_eventnewActiveProfile_Parms
{
	  FString newProfileName;
	  FString baseProfileName;
	  BITFIELD bReadOnly;
	  class UPlayerProfile* ReturnValue;
};
// Class	UTribesGuiPage is declared in "..\TribesGui\Classes\TribesGUIPage.uc"
class TRIBESGUI_API	UTribesGuiPage	: public UGUIPage
{
public:
    class UTribesGUIConfig* gc;
    BITFIELD bEscapeable:1;
    FStringNoInit PageOpenedAfterEscape;
    BITFIELD bSuppressLevelRender:1;
	   DECLARE_CLASS(UTribesGuiPage,UGUIPage,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesGuiPage)
};

// Class	UTribesMainMenu is declared in "..\TribesGui\Classes\TribesMainMenu.uc"
class TRIBESGUI_API	UTribesMainMenu	: public UTribesGuiPage
{
public:
    class UGUIButton* NewGameButton;
    class UGUIButton* LoadGameButton;
    class UGUIButton* MultiplayerButton;
    class UGUIButton* OptionsButton;
    class UGUIButton* CreditsButton;
    class UGUIButton* QuitButton;
    class UGUIButton* DebugLoadMapButton;
    class UGUIButton* ContinueButton;
    class UGUILabel* VersionLabel;
    BITFIELD bActivated:1;
	   DECLARE_FUNCTION(execGetRecentSave);
	   DECLARE_FUNCTION(execGetVersionString);
	   DECLARE_CLASS(UTribesMainMenu,UTribesGuiPage,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesMainMenu)
};

// Class	UTribesMissionLoadingMenu is declared in "..\TribesGui\Classes\TribesMissionLoadingMenu.uc"
class TRIBESGUI_API	UTribesMissionLoadingMenu	: public UTribesGuiPage
{
public:
    class UGUILabel* descriptionLabel;
    class UGUILabel* titleLabel;
    class UGUIImage* screenshotImage;
    class UMaterial* defaultImage;
    class UMaterial* defaultFrameImage;
    class UGUIImage* frameImage;
    class UGUILabel* HintLabel;
    class UGUIProgressBar* MissionLoadingProgressBar;
    FColor HintColor;
    FColor BindColor;
    FStringNoInit connectingText;
    FStringNoInit defaultLabel;
    FStringNoInit defaultTitle;
	   DECLARE_CLASS(UTribesMissionLoadingMenu,UTribesGuiPage,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesMissionLoadingMenu)
};

// Class	UTribesPatchCheck is declared in "..\TribesGui\Classes\TribesPatchCheck.uc"
class TRIBESGUI_API	UTribesPatchCheck	: public UTribesGuiPage
{
public:
    class UGUIButton* YesButton;
    class UGUIButton* NoButton;
    class UGUIButton* OKButton;
    class UGUILabel* StatusLabel;
    class UGUILabel* URLLabel;
    FStringNoInit PatchCheckingText;
    FStringNoInit NewVersionText;
    FStringNoInit UpToDateText;
    FStringNoInit URLFailedText;
    INT CheckTimeout;
    class UTribesGameSpyManager* gm;
	   DECLARE_FUNCTION(execOnYes);
	  void	eventOnURLFailed(const FString& Error)
	  {
        UTribesPatchCheck_eventOnURLFailed_Parms Parms;
		   Parms.Error=Error;
        ProcessEvent(FindFunctionChecked(TRIBESGUI_OnURLFailed),&Parms);
	  }
	   DECLARE_CLASS(UTribesPatchCheck,UTribesGuiPage,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesPatchCheck)
};

// Class	UTribesSaveGameBase is declared in "..\TribesGui\Classes\TribesSaveGameBase.uc"
class TRIBESGUI_API	UTribesSaveGameBase	: public UTribesGuiPage
{
public:
	   DECLARE_FUNCTION(execDeleteSave);
	   DECLARE_FUNCTION(execGetSaves);
	   DECLARE_CLASS(UTribesSaveGameBase,UTribesGuiPage,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesSaveGameBase)
};

// Class	UTribesGUIPanel is declared in "..\TribesGui\Classes\TribesGUIPanel.uc"
class TRIBESGUI_API	UTribesGUIPanel	: public UGUIPanel
{
public:
    class UTribesGUIConfig* gc;
	   DECLARE_CLASS(UTribesGUIPanel,UGUIPanel,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesGUIPanel)
};

// Class	UTribesSettingsPanel is declared in "..\TribesGui\Classes\TribesSettingsPanel.uc"
class TRIBESGUI_API	UTribesSettingsPanel	: public UTribesGUIPanel
{
public:
    BITFIELD bLoadingSettings:1;
	   DECLARE_CLASS(UTribesSettingsPanel,UTribesGUIPanel,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesSettingsPanel)
};

// Class	UTribesOptionsAudioPanel is declared in "..\TribesGui\Classes\TribesOptionsAudioPanel.uc"
class TRIBESGUI_API	UTribesOptionsAudioPanel	: public UTribesSettingsPanel
{
public:
    class UGUISlider* SoundVolumeSlider;
    class UGUISlider* MusicVolumeSlider;
    class UGUISlider* SpeechVolumeSlider;
    class UGUIButton* DefaultsButton;
    class UGUICheckBoxButton* Use3DCheck;
    class UGUICheckBoxButton* UseDefaultDriverCheck;
    class UGUICheckBoxButton* CompatibilityCheck;
    class UGUICheckBoxButton* ReverseStereoCheck;
    class UGUICheckBoxButton* LowQualityCheck;
    class UGUICheckBoxButton* ChatWindowCheck;
    BITFIELD bIsDataDirty:1;
	   DECLARE_FUNCTION(execRestoreDefaults);
	   DECLARE_CLASS(UTribesOptionsAudioPanel,UTribesSettingsPanel,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesOptionsAudioPanel)
};

// Class	UTribesOptionsControlsPanel is declared in "..\TribesGui\Classes\TribesOptionsControlsPanel.uc"
class TRIBESGUI_API	UTribesOptionsControlsPanel	: public UTribesSettingsPanel
{
public:
    class UGUIMultiColumnListBox* MyKeyBindingsBox;
    class UGUIButton* MyKeyChoose;
    class UGUICheckBoxButton* InvertMouseButton;
    class UGUICheckBoxButton* TeamColorsButton;
    class UGUISlider* MyMouseSensSlider;
    class UGUIButton* DefaultsButton;
    FStringNoInit LastCategory;
    FStringNoInit KeyChangeMessage;
    FStringNoInit NoBindKeyChangeMessage;
	   DECLARE_FUNCTION(execRestoreDefaults);
	   DECLARE_CLASS(UTribesOptionsControlsPanel,UTribesSettingsPanel,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesOptionsControlsPanel)
};

// Class	UTribesOptionsVideoPanel is declared in "..\TribesGui\Classes\TribesOptionsVideoPanel.uc"
class TRIBESGUI_API	UTribesOptionsVideoPanel	: public UTribesSettingsPanel
{
public:
    class UGUIComboBox* BMDBox;
    class UGUIComboBox* DSDBox;
    class UGUIComboBox* GlowDBox;
    class UGUIComboBox* TexDBox;
    class UGUIComboBox* ResolutionBox;
    class UGUIComboBox* RenderDetailBox;
    class UGUIComboBox* MacroBox;
    class UGUIComboBox* DecoBox;
    class UGUIComboBox* FluidBox;
    class UGUIComboBox* FogBox;
    class UGUIComboBox* WorldBox;
    class UGUIComboBox* PS2Box;
    class UGUISlider* BrightnessSlider;
    class UGUISlider* ContrastSlider;
    class UGUISlider* GammaSlider;
    class UGUIButton* ApplyButton;
    class UGUIButton* DefaultsButton;
    TArrayNoInit<FString> DetailChoices;
    TArrayNoInit<FString> RenderDetailChoices;
    TArrayNoInit<FString> OnOffChoices;
    FStringNoInit SwitchingResText;
    FStringNoInit ResSwitchedText;
    FStringNoInit ResFailedText;
    FStringNoInit ChangesText;
    FStringNoInit LastResolution;
    BITFIELD bIsDataDirty:1;
    BITFIELD bTimerHack:1;
    class UGUIDlg* promptDlg;
    class UGUIPanel* targetPanel;
    INT InitialRenderDetail;
    BITFIELD bExiting:1;
	   DECLARE_FUNCTION(execRestoreDefaults);
	   DECLARE_CLASS(UTribesOptionsVideoPanel,UTribesSettingsPanel,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesOptionsVideoPanel)
};

// Class	UHUDElement is declared in "..\TribesGui\Classes\HUD\HUDElement.uc"
class TRIBESGUI_API	UHUDElement	: public UObject
{
public:
    FHUDMaterial BackgroundTexture;
    FHUDMaterial foregroundTexture;
    BITFIELD bUseResFonts:1;
    TArrayNoInit<FString> resFontNames;
    TArrayNoInit<class UFont*> resFonts;
    FStringNoInit textFontName;
    class UFont* textFont;
    FColor TextColor;
    BITFIELD bRelativePositioning:1;
    FLOAT RelativePosX;
    FLOAT RelativePosY;
    FLOAT RelativeWidth;
    FLOAT RelativeHeight;
    FLOAT aspectRatio;
    FLOAT posX;
    FLOAT posY;
    FLOAT Width;
    FLOAT height;
    INT offsetX;
    INT offsetY;
    INT insetX;
    INT insetY;
    INT borderTop;
    INT borderLeft;
    INT borderBottom;
    INT borderRight;
    BYTE horizontalAlignment;
    BYTE horizontalFill;
    BYTE verticalAlignment;
    BYTE verticalFill;
    FLOAT Alpha;
    FColor defaultDrawColor;
    BITFIELD bVisible:1;
    FStringNoInit iniOverride;
    FLOAT initialPosX;
    FLOAT initialPosY;
    FLOAT initialWidth;
    FLOAT initialHeight;
    FLOAT ScreenWidth;
    FLOAT screenHeight;
    BITFIELD bNeedsLayout:1;
    class UHUDContainer* ParentElement;
    class UTribesHUDScript* BaseScript;
    class UClientSideCharacter* LocalData;
    BITFIELD bRenderedOnce:1;
    FLOAT TimeSeconds;
    BITFIELD bIsLayingOut:1;
    class UHUDElement* previousSibling;
    class UHUDElement* nextSibling;
    FStringNoInit HelpLabel;
    FStringNoInit HelpFontName;
    class UFont* HelpFont;
    BITFIELD bFlashing:1;
    FLOAT FlashPeriod;
    FLOAT FlashDuration;
    FLOAT FlashStartTime;
    FLOAT FlashAlphaMin;
    FLOAT FlashAlphaMax;
    FLOAT TargetAlpha;
    FLOAT FlashSwitchTime;
	   DECLARE_FUNCTION(execEncodeColor);
	   DECLARE_FUNCTION(execLoadConfig);
	   DECLARE_FUNCTION(execResizeForWidth);
	   DECLARE_FUNCTION(execNativeRenderElement);
	   DECLARE_FUNCTION(execRender);
	   DECLARE_FUNCTION(execLayout);
	   DECLARE_FUNCTION(execRenderHUDMaterial);
	  void	eventSetAlpha(FLOAT newAlpha)
	  {
        UHUDElement_eventSetAlpha_Parms Parms;
		   Parms.newAlpha=newAlpha;
        ProcessEvent(FindFunctionChecked(TRIBESGUI_SetAlpha),&Parms);
	  }
	  void	eventRenderElement(class UCanvas* C)
	  {
        UHUDElement_eventRenderElement_Parms Parms;
		   Parms.C=C;
        ProcessEvent(FindFunctionChecked(TRIBESGUI_RenderElement),&Parms);
	  }
	  void	eventUpdateData(class UClientSideCharacter* C)
	  {
        UHUDElement_eventUpdateData_Parms Parms;
		   Parms.C=C;
        ProcessEvent(FindFunctionChecked(TRIBESGUI_UpdateData),&Parms);
	  }
	  void	eventResetFont()
	  {
		   ProcessEvent(FindFunctionChecked(TRIBESGUI_ResetFont),NULL);
	  }
	  void	eventForceNeedsLayout()
	  {
		   ProcessEvent(FindFunctionChecked(TRIBESGUI_ForceNeedsLayout),NULL);
	  }
	  void	eventSetNeedsLayout()
	  {
		   ProcessEvent(FindFunctionChecked(TRIBESGUI_SetNeedsLayout),NULL);
	  }
	  void	eventDoLayout(class UCanvas* C)
	  {
        UHUDElement_eventDoLayout_Parms Parms;
		   Parms.C=C;
        ProcessEvent(FindFunctionChecked(TRIBESGUI_DoLayout),&Parms);
	  }
	   DECLARE_CLASS(UHUDElement,UObject,0|CLASS_Config,TribesGui)

	// Internal render HUD material, overloaded to optimise when tiling 
	// is not required (as in most cases)
	void RenderHUDMaterial(UCanvas *canvas, FHUDMaterial &mat, FLOAT matWidth, FLOAT matHeight);

	// Internal render HUD material. This version will tile the material
	// to the width of tileSizeX & tileSizeY
	void RenderHUDMaterial(UCanvas *c, FHUDMaterial &mat, FLOAT matWidth, FLOAT matHeight, FLOAT tileSizeX, FLOAT tileSizeY);

	// Interpolates a color between a source & target, based on a percentage progress
	// between the source and target.
	void InterpolateColor(FColor &newColor, FColor source, FColor target, float progress);

	// native set color call
	virtual void SetColor(UCanvas *canvas, FColor color);

	// Internal Render function
	virtual void Render(UCanvas *canvas);

	// Internal RenderElement function.
	virtual void RenderElement(UCanvas *canvas);

	// Native Update function
	virtual void Update();

	// Native Layout function
	virtual void Layout(UCanvas *canvas);

	// Internal horizontal packing function
	virtual void ResizeForWidth(UCanvas *canvas, INT pixelWidth);
};

// Class	UHUDContainer is declared in "..\TribesGui\Classes\HUD\HUDContainer.uc"
class TRIBESGUI_API	UHUDContainer	: public UHUDElement
{
public:
    TArrayNoInit<class UHUDElement*> Children;
	   DECLARE_CLASS(UHUDContainer,UHUDElement,0|CLASS_Config,TribesGui)

	// Internal Render function
	virtual void Render(UCanvas *canvas);

	// Internal horizontal packing function
	virtual void ResizeForWidth(UCanvas *canvas, INT pixelWidth);

	// Internal Layout function
	virtual void Layout(UCanvas *canvas);
};

// Class	UHUDList is declared in "..\TribesGui\Classes\HUD\HUDList.uc"
class TRIBESGUI_API	UHUDList	: public UHUDContainer
{
public:
    BITFIELD bAutoHeight:1;
    INT RowSpacing;
    TArrayNoInit<class UHUDList*> columns;
	   DECLARE_CLASS(UHUDList,UHUDContainer,0|CLASS_Config,TribesGui)
	virtual void Layout(UCanvas *canvas);
};

// Class	UHUDRadarBase is declared in "..\TribesGui\Classes\HUD\HUDRadarBase.uc"
class TRIBESGUI_API	UHUDRadarBase	: public UHUDContainer
{
public:
    FLOAT relativeEdgeRadius;
    BITFIELD bClipMarkers:1;
    FLOAT defaultFlashFrequency;
    FLOAT SmallMarkerZoomThreshold;
    class UClientSideCharacter* currentData;
    FLOAT zoomFactor;
    FRotator mapRotation;
    FVector mapCenter;
    FLOAT mapExtent;
    FLOAT componentOriginX;
    FLOAT componentOriginY;
    FMatCoords LastRenderedMarkerCoords;
	   DECLARE_FUNCTION(execRenderObjectives);
	   DECLARE_FUNCTION(execRenderAllies);
	   DECLARE_FUNCTION(execRenderEnemies);
	   DECLARE_FUNCTION(execGetHUDMaterial);
	   DECLARE_FUNCTION(execRenderRadarMarker);
	   DECLARE_FUNCTION(execCalcMarkerPosition);
	  BITFIELD	eventShouldRender(class UClass* radarInfoClass)
	  {
        UHUDRadarBase_eventShouldRender_Parms Parms;
		   Parms.ReturnValue=0;
		   Parms.radarInfoClass=radarInfoClass;
        ProcessEvent(FindFunctionChecked(TRIBESGUI_ShouldRender),&Parms);
		   return Parms.ReturnValue;
	  }
	   DECLARE_CLASS(UHUDRadarBase,UHUDContainer,0|CLASS_Config,TribesGui)
	FHUDMaterial GetHUDMaterial(UClass *radarInfoClass, INT state, UBOOL isFriendly, EIconType iconType, FColor TeamColor, EColorType PrefColorType, UBOOL bForceFlash);
	void RenderRadarMarker(UCanvas *canvas, FVector position, INT objectHeight, UClass *objectRadarInfo, INT state, UBOOL isFriendly, FColor TeamColor, EColorType PrefColorType, FString InfoLabel, UBOOL bFlashing, UMaterial *materialOverride);
};

// Class	UHUDValueBar is declared in "..\TribesGui\Classes\HUD\HUDValueBar.uc"
class TRIBESGUI_API	UHUDValueBar	: public UHUDContainer
{
public:
    FHUDMaterial emptyTexture;
    FHUDMaterial fullTexture;
    FLOAT barStartOffset;
    FLOAT barEndOffset;
    FLOAT Value;
    FLOAT maximumValue;
    FHUDMaterial activeEmptyTexture;
    FHUDMaterial activeFullTexture;
    FStringNoInit LabelConfigName;
    INT MaxDisplayDigits;
    class UHUDNumericTextureLabel* ValueLabel;
    FLOAT barStart;
    FLOAT barEnd;
    FLOAT barWidth;
    FLOAT ratio;
    BITFIELD bReverse:1;
	   DECLARE_FUNCTION(execClipToValue);
	   DECLARE_CLASS(UHUDValueBar,UHUDContainer,0|CLASS_Config,TribesGui)
	// Internal NativeRender function.
	virtual void RenderElement(UCanvas *canvas);

	void ClipToValue(UCanvas *canvas, FHUDMaterial mat, float clipRatio);
};

// Class	UTribesHUDScriptBase is declared in "..\TribesGui\Classes\HUD\TribesHUDScriptBase.uc"
class TRIBESGUI_API	UTribesHUDScriptBase	: public UHUDContainer
{
public:
    TArrayNoInit<FHUDExtension> ExtensionSpecs;
	   DECLARE_CLASS(UTribesHUDScriptBase,UHUDContainer,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesHUDScriptBase)
};

// Class	UTribesHUDScript is declared in "..\TribesGui\Classes\HUD\TribesHUDScript.uc"
class TRIBESGUI_API	UTribesHUDScript	: public UTribesHUDScriptBase
{
public:
    TArrayNoInit<class UHUDElement*> keyEventReceptors;
    TArrayNoInit<class UHUDElement*> mouseEventReceptors;
    INT LastMouseX;
    INT LastMouseY;
    BITFIELD bIsChatEnabled:1;
    BITFIELD bIsQuickChatEnabled:1;
    class UHUDChatEntry* chatEntry;
    class UHUDQuickChatMenu* QuickChatMenu;
    class UHUDMessageWindow* messageWindow;
    class UHUDContainer* messageContainer;
    class UHUDContainer* quickChatMenuContainer;
    class UQuickChatMenu* rootQuickChatMenuObject;
    FStringNoInit rootQuickChatMenuObjectName;
    BITFIELD bOldQuickChat:1;
    class UHUDAnnouncerMessageWindow* AnnouncementsWindow;
    BITFIELD bIsAnnouncmentsEnabled:1;
    class UHUDEventMessageWindow* EventMessageWindow;
    BITFIELD bEventMessagesEnabled:1;
    BITFIELD bShowScoreboard:1;
    class UHUDContainer* scoreboardGroup;
    class ULabelElement* teamOneScoreLabel;
    class ULabelElement* teamOneLabel;
    class UHUDCountDown* countDown;
    class ULabelElement* teamTwoLabel;
    class ULabelElement* teamTwoScoreLabel;
	   DECLARE_CLASS(UTribesHUDScript,UTribesHUDScriptBase,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesHUDScript)
};

// Class	UHUDNumericTextureLabel is declared in "..\TribesGui\Classes\HUD\HUDNumericTextureLabel.uc"
class TRIBESGUI_API	UHUDNumericTextureLabel	: public UHUDElement
{
public:
    class UMaterial* FontMaterial;
    TArrayNoInit<INT> DigitWidths;
    TArrayNoInit<INT> TrailingSpaces;
    FColor TextColor;
    INT DigitHeight;
    BITFIELD bCenterText:1;
    FStringNoInit data;
    TArrayNoInit<INT> DigitIndex;
	   DECLARE_FUNCTION(execSetDataString);
	   DECLARE_CLASS(UHUDNumericTextureLabel,UHUDElement,0|CLASS_Config,TribesGui)
	// Internal Native RenderElement function.
	virtual void RenderElement(UCanvas *canvas);
};

// Class	ULabelElement is declared in "..\TribesGui\Classes\HUD\LabelElement.uc"
class TRIBESGUI_API	ULabelElement	: public UHUDElement
{
public:
    FStringNoInit Text;
    BITFIELD bCentered:1;
    BITFIELD bShadowed:1;
    BITFIELD bAutoWrapText:1;
    BITFIELD bAutoScrollText:1;
    INT shadowPixelOffset;
    FLOAT textInsetX;
    FLOAT textInsetY;
    INT hangingIndent;
    BITFIELD bHTMLEncoded:1;
    FColor shadowColor;
    BYTE Justification;
    BITFIELD bAutoSize:1;
    TArrayNoInit<FString> textLineArray;
    INT firstVisibleLineIndex;
	   DECLARE_CLASS(ULabelElement,UHUDElement,0|CLASS_Config,TribesGui)
	void DoTextWrap(UCanvas *canvas);
	virtual void ResizeForWidth(UCanvas *canvas, INT pixelWidth);

	// Internal Render function.
	virtual void RenderElement(UCanvas *canvas);

	// native layout function
	virtual void Layout(UCanvas *canvas);
};

// Class	UTribesGUIController is declared in "..\TribesGui\Classes\TribesGUIController.uc"
class TRIBESGUI_API	UTribesGUIController	: public UTribesGUIControllerBase
{
public:
    TArrayNoInit<class UGUIPage*> StorageStack;
    class UProfileManager* ProfileManager;
    FColor neutralColor;
    FColor neutralHighlightColor;
	   DECLARE_FUNCTION(execFindQuickChatNames);
	   DECLARE_CLASS(UTribesGUIController,UTribesGUIControllerBase,0|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UTribesGUIController)
};

// Class	UPlayerProfile is declared in "..\TribesGui\Classes\Config\PlayerProfile.uc"
class TRIBESGUI_API	UPlayerProfile	: public UObject
{
public:
    BITFIELD bStoreLogins:1;
    TArrayNoInit<FAutoLoginInfo> LoginHistory;
    TArrayNoInit<FServerFavorite> serverFavorites;
    FStringNoInit PlayerName;
    BITFIELD bIsFemale:1;
    FStringNoInit voiceSet;
    FStringNoInit SkinName;
    TArrayNoInit<FLoadoutSlot> loadoutSlots;
    FLoadoutSlot activeLoadoutSlot;
    TArrayNoInit<FString> buddyList;
    BITFIELD bReadOnly:1;
    BITFIELD bShownMPHelp:1;
    BITFIELD bUseStatTracking:1;
    BITFIELD bSaveStatTrackingPassword:1;
    FStringNoInit statTrackingNick;
    FStringNoInit statTrackingEmail;
    FStringNoInit statTrackingPassword;
    INT statTrackingID;
    BITFIELD bUseTeamAffiliation:1;
    BITFIELD bSaveTeamPassword:1;
    INT affiliatedTeamId;
    FStringNoInit affiliatedTeamTag;
    FStringNoInit affiliatedTeamName;
    FStringNoInit affiliatedTeamPassword;
    FStringNoInit ownedTeamTag;
    FStringNoInit ownedTeamName;
    TArrayNoInit<class UCustomPlayerLoadout*> loadouts;
    class UCustomPlayerLoadout* activeLoadout;
    class UGUIController* Controller;
    FStringNoInit configFilePath;
	   DECLARE_FUNCTION(execLoadProfileData);
	   DECLARE_CLASS(UPlayerProfile,UObject,0|CLASS_Transient|CLASS_Config,TribesGui)

	// loads the profile data
	void LoadProfileData(UGUIController* gc);

};

// Class	UProfileManager is declared in "..\TribesGui\Classes\Config\ProfileManager.uc"
class TRIBESGUI_API	UProfileManager	: public UObject
{
public:
    FStringNoInit activeProfileName;
    INT nextProfileNumber;
    class UPlayerProfile* defaultProfile;
    TArrayNoInit<class UPlayerProfile*> profiles;
    INT activeProfileIndex;
    class UGUIController* Controller;
	   DECLARE_FUNCTION(execDeleteProfile);
	   DECLARE_FUNCTION(execLoadProfiles);
	  class UPlayerProfile*	eventnewActiveProfile(const FString& newProfileName, const FString& baseProfileName, BITFIELD bReadOnly)
	  {
        UProfileManager_eventnewActiveProfile_Parms Parms;
		   Parms.ReturnValue=0;
		   Parms.newProfileName=newProfileName;
		   Parms.baseProfileName=baseProfileName;
		   Parms.bReadOnly=bReadOnly;
        ProcessEvent(FindFunctionChecked(TRIBESGUI_newActiveProfile),&Parms);
		   return Parms.ReturnValue;
	  }
	   DECLARE_CLASS(UProfileManager,UObject,0|CLASS_Transient|CLASS_Config,TribesGui)
	   NO_DEFAULT_CONSTRUCTOR(UProfileManager)
};

#endif

AUTOGENERATE_FUNCTION(UHUDElement,-1,execEncodeColor);
AUTOGENERATE_FUNCTION(UHUDElement,-1,execLoadConfig);
AUTOGENERATE_FUNCTION(UHUDElement,-1,execResizeForWidth);
AUTOGENERATE_FUNCTION(UHUDElement,-1,execNativeRenderElement);
AUTOGENERATE_FUNCTION(UHUDElement,-1,execRender);
AUTOGENERATE_FUNCTION(UHUDElement,-1,execLayout);
AUTOGENERATE_FUNCTION(UHUDElement,-1,execRenderHUDMaterial);
AUTOGENERATE_FUNCTION(UHUDNumericTextureLabel,-1,execSetDataString);
AUTOGENERATE_FUNCTION(UHUDRadarBase,-1,execRenderObjectives);
AUTOGENERATE_FUNCTION(UHUDRadarBase,-1,execRenderAllies);
AUTOGENERATE_FUNCTION(UHUDRadarBase,-1,execRenderEnemies);
AUTOGENERATE_FUNCTION(UHUDRadarBase,-1,execGetHUDMaterial);
AUTOGENERATE_FUNCTION(UHUDRadarBase,-1,execRenderRadarMarker);
AUTOGENERATE_FUNCTION(UHUDRadarBase,-1,execCalcMarkerPosition);
AUTOGENERATE_FUNCTION(UHUDValueBar,-1,execClipToValue);
AUTOGENERATE_FUNCTION(UPlayerProfile,-1,execLoadProfileData);
AUTOGENERATE_FUNCTION(UProfileManager,-1,execDeleteProfile);
AUTOGENERATE_FUNCTION(UProfileManager,-1,execLoadProfiles);
AUTOGENERATE_FUNCTION(UTribesGUIController,-1,execFindQuickChatNames);
AUTOGENERATE_FUNCTION(UTribesMainMenu,-1,execGetRecentSave);
AUTOGENERATE_FUNCTION(UTribesMainMenu,-1,execGetVersionString);
AUTOGENERATE_FUNCTION(UTribesOptionsAudioPanel,-1,execRestoreDefaults);
AUTOGENERATE_FUNCTION(UTribesOptionsControlsPanel,-1,execRestoreDefaults);
AUTOGENERATE_FUNCTION(UTribesOptionsVideoPanel,-1,execRestoreDefaults);
AUTOGENERATE_FUNCTION(UTribesPatchCheck,-1,execOnYes);
AUTOGENERATE_FUNCTION(UTribesSaveGameBase,-1,execDeleteSave);
AUTOGENERATE_FUNCTION(UTribesSaveGameBase,-1,execGetSaves);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#if SUPPORTS_PRAGMA_PACK
#pragma pack	(pop)
#endif

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_SIZE_NODIE(UHUDContainer)
VERIFY_CLASS_SIZE_NODIE(UHUDElement)
VERIFY_CLASS_SIZE_NODIE(UHUDList)
VERIFY_CLASS_SIZE_NODIE(UHUDNumericTextureLabel)
VERIFY_CLASS_SIZE_NODIE(UHUDRadarBase)
VERIFY_CLASS_SIZE_NODIE(UHUDValueBar)
VERIFY_CLASS_SIZE_NODIE(ULabelElement)
VERIFY_CLASS_SIZE_NODIE(UPlayerProfile)
VERIFY_CLASS_SIZE_NODIE(UProfileManager)
VERIFY_CLASS_SIZE_NODIE(UTribesGUIController)
VERIFY_CLASS_SIZE_NODIE(UTribesGUIPanel)
VERIFY_CLASS_SIZE_NODIE(UTribesGuiPage)
VERIFY_CLASS_SIZE_NODIE(UTribesHUDScript)
VERIFY_CLASS_SIZE_NODIE(UTribesHUDScriptBase)
VERIFY_CLASS_SIZE_NODIE(UTribesMainMenu)
VERIFY_CLASS_SIZE_NODIE(UTribesMissionLoadingMenu)
VERIFY_CLASS_SIZE_NODIE(UTribesOptionsAudioPanel)
VERIFY_CLASS_SIZE_NODIE(UTribesOptionsControlsPanel)
VERIFY_CLASS_SIZE_NODIE(UTribesOptionsVideoPanel)
VERIFY_CLASS_SIZE_NODIE(UTribesPatchCheck)
VERIFY_CLASS_SIZE_NODIE(UTribesSaveGameBase)
VERIFY_CLASS_SIZE_NODIE(UTribesSettingsPanel)
#endif // VERIFY_CLASS_SIZES
